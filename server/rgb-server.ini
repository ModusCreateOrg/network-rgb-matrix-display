; Example INI file for a screen  with 20 matrices
; broken up into 5 strips of 4 64x64 pixel screens
[general]
auto_clear_display = 1      ; 0 for static images
auto_clear_delay = 500000   ; usleep() for this amount of time after we've hit a number of connection failures


; Single matrix dimensions
[matrix_dimensions]
width = 64
height = 64

[segment_info]
panels_wide = 4
panels_tall = 1

[network]
port = 9890
; Be sure to change this
;ip = 10.1.10.203
; and this for debugging purposes
segment_id = 1


; These are passed on to the rpi-rgb-led-matrix library
[rgb_matrix_lib_options]
; Name of the hardware mapping. Something like "regular" or "adafruit-hat"
hardware_mapping = regular

; The number of parallel chains connected to the Pi; in old Pis with 26
; GPIO pins, that is 1, in newer Pis with 40 interfaces pins, that can
; also be 2 or 3. The effective number of pixels in vertical direction is
; then thus rows * parallel. Default: 1
parallel = 1


; Set PWM bits used for output. Default is 11, but if you only deal with
; limited comic-colors, 1 might be sufficient. Lower require less CPU and
; increases refresh-rate.
; RPi4 - set to 6. Rpi 3, set to 4.
pwm_bits = 6

; Change the base time-unit for the on-time in the lowest
; significant bit in nanoseconds.
; Higher numbers provide better quality (more accurate color, less
; ghosting), but have a negative impact on the frame rate.
;  range of pwm-lsb-nanoseconds (50..3000 allowed).
; 130 is default
pwm_lsb_nanoseconds = 302

; The lower bits can be time-dithered for higher refresh rate.
; Flag: --led-pwm-dither-bits
pwm_dither_bits = 1

; The initial brightness of the panel in percent. Valid range is 1..100
; Default: 100
brightness = 100

; Scan mode: 0=progressive, 1=interlaced
scan_mode = 0

; Default row address type is 0, corresponding to direct setting of the
; row, while row address type 1 is used for panels that only have A/B,
; typically some 64x64 panels
row_address_type = 0

; Type of multiplexing. 0 = direct, 1 = stripe, 2 = checker (typical 1:8)
multiplexing = 0

; Disable the PWM hardware subsystem to create pulses.
; Typically, you don't want to disable hardware pulsing, this is mostly
; for debugging and figuring out if there is interference with the
; sound system.
; This won't do anything if output enable is not connected to GPIO 18 in
; non-standard wirings.
; 0 false, 1 true
disable_hardware_pulsing = 0

; 0 false, 1 true
show_refresh_rate = 1
; 0 false, 1 true
inverse_colors = 0

; In case the internal sequence of mapping is not "RGB", this contains the
; real mapping. Some panels mix up these colors.
; see led-matrix.h for more details
led_rgb_sequence = RGB

; A string describing a sequence of pixel mappers that should be applied
; to this matrix. A semicolon-separated list of pixel-mappers with optional
; parameter.

pixel_mapper_config = Rotate:0

[rgb_matrix_runtime_options]
; 0 = no slowdown.
gpio_slowdown = 3

; ----------
; If the following options are set to disabled with -1, they are not
; even offered via the command line flags.
; ----------

; If daemon is disabled (= -1), the user has to call StartRefresh() manually
; once the matrix is created, to leave the decision to become a daemon
; after the call (which requires that no threads have been started yet).
; In the other cases (off or on), the choice is already made, so the thread
; is conveniently already started for you.
; -1 disabled. 0=off, 1=on.
daemon = 1

; Drop privileges from 'root' to 'daemon' once the hardware is initialized.
; This is usually a good idea unless you need to stay on elevated privs.
; -1 disabled. 0=off, 1=on.
drop_privileges = -1

; By default, the gpio is initialized for you, but if you want to manually
; do that yourself, set this flag to false.
; Then, you have to initialize the matrix yourself with SetGPIO().
; Use 1 for true, 0 for false
do_gpio_init = 1